# This is a basic workflow to help you get started with Actions

name: SN

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branches: [master]
    pull_request:
        branches: [master]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build:
        # Purpose of this job is to Apply Remote Changes for the branch triggering 
        # the pipeline build to the Dev instance, then publish the application to 
        # app repo using the template versioning format. 
        name: Publish App
        runs-on: ubuntu-latest

        # Below line can be used to set conditionals for modifying your pipeline as needed.
        # if: ${{ github.event_name == 'pull_request'}}
        steps:
        - name: ServiceNow CI/CD Publish App
          id: publish_app
          uses: ServiceNow/sncicd-publish-app@1.0.0
          with:
            version: ${{ secrets.SN_PUBLISH_VERSION}}
            versionFormat: exact
          env:
            snowUsername: ${{ secrets.SN_USERNAME }}
            snowPassword: ${{ secrets.SN_PASSWORD }}
            snowSourceInstance: ${{ secrets.SN_AUTHOR_INSTANCE }}
            appSysID: ${{ secrets.SN_APP_SYSID }}
            appScope: ${{ secrets.SN_APP_SCOPE }}

            # This is required to pass the version number output from Publish App 
            # to the input for Install App in the next job! This is because the jobs 
            # run on different Linux instances, so without this Install App won't know
            # what to install.
        outputs:
            publishversion: ${{ steps.publish_app.outputs.newVersion }}

    test:
    # Purpose of this job is to Install App to a Prod instance. This should only 
    # trigger if the feature branch has been merged to master after a successfully 
    # completed pull request, hence the conditional for push to master. In other words,
    # the first two jobs run on CI, then all three jobs run on CD. 
        name: Install App
        runs-on: ubuntu-latest
        needs: build
    
        steps:
            # To use this repository's private action,
            # you must check out the repository
            - name: Checkout
              uses: actions/checkout@v2
            - name: Install_preview_updates
              uses: ./.github/actions/install
              id: install
              with:
                version: ${{ steps.publish_app.outputs.newVersion }}
              env:
                snowUsername: ${{ secrets.SN_USERNAME }}
                snowPassword: ${{ secrets.SN_PASSWORD }}
                snowInstallInstance: ${{ secrets.SN_CLIENT_INSTANCE }}
                appSysID: ${{ secrets.SN_APP_SYSID }}
                appScope: ${{ secrets.SN_APP_SCOPE }}
                baseAppVersion: ${{ secrets.SN_BASE_APP_VERSION }}
                autoUpgradeBaseApp: ${{ secrets.SN_AUTO_UPGRADE_BASE_APP }}
    deploy:
    # Purpose of this job is to Install App to a Prod instance. This should only 
    # trigger if the feature branch has been merged to master after a successfully 
    # completed pull request, hence the conditional for push to master. In other words,
    # the first two jobs run on CI, then all three jobs run on CD. 
        name: Rollback installation
        runs-on: ubuntu-latest
        needs: test
    
        steps:
          - name: ServiceNow CI/CD Rollback App
            uses: ServiceNow/sncicd-rollback-app@1.0.0
            with:
              version: ${{steps.install_app.outputs.rollbackVersion}}
            env:
              snowUsername: ${{ secrets.SN_USERNAME }}
              snowPassword: ${{ secrets.SN_PASSWORD }}
              snowInstallInstance: ${{ secrets.SN_CLIENT_INSTANCE }}
              appSysID: ${{ secrets.SN_APP_SYSID }}

            

    
          